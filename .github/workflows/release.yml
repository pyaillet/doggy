name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          # (optional) Path to changelog.
          # changelog: CHANGELOG.md
          # (required) GitHub token for creating GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    needs: create-release
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          # Universal macOS binary is supported as universal-apple-darwin.
          #- target: universal-apple-darwin
          #  os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          declare VERSION=3.14.0 && \
          echo "üì¶ Installing version: ${VERSION}" && \
          declare TARGET_OS=$(if [[ $(uname -s) == "Linux" ]]; then echo "linux"; else echo "osx"; fi) && \
          declare ARCH=$(uname -m) && \
          echo "üì¶ Installing for os/arch: ${TARGET_OS}/${ARCH}" && \
          PROTOC_ZIP=protoc-${VERSION}-${TARGET_OS}-${ARCH}.zip && \
          echo "üè∑Ô∏è Will get the archive file: ${PROTOC_ZIP}" && \
          curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v${VERSION}/${PROTOC_ZIP} && \
          echo "üèóÔ∏è Installing in path" && \
          sudo unzip -o ${PROTOC_ZIP} -d /usr/local bin/protoc && \
          sudo chmod +x /usr/local/bin/protoc && \
          sudo unzip -o ${PROTOC_ZIP} -d /usr/local 'include/*' && \
          echo "üßπ Cleaning up" && \
          rm -f ${PROTOC_ZIP}
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          # (required) Comma-separated list of binary names (non-extension portion of filename) to build and upload.
          # Note that glob pattern is not supported yet.
          bin: doggy
          # (optional) Target triple, default is host triple.
          target: ${{ matrix.target }}
          # (required) GitHub token for uploading assets to GitHub Releases.
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          PROTOC: /usr/local/bin/protoc
